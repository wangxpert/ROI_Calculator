= TaxCloud

TaxCloud[http://www.taxcloud.com] is a free service to calculate sales tax and generate tax reports. The <tt>tax_cloud</tt> gem allows you to easily integrate with TaxCloud's API.

=== Getting Started
A TaxCloud[http://www.taxcloud.com] API ID and API key are required, along with an optional USPS address API username.

1. Create a TaxCloud[http://www.taxcloud.com] merchant account at http://www.taxcloud.net
2. Add a website to your TaxCloud[http://www.taxcloud.com] account. This will generate an API ID and API Key that you will need to use the service.
3. Get access to the USPS Address API at https://www.usps.com/business/webtools.htm. The API will provide a 9-digit zip code, which allows TaxCloud[http://www.taxcloud.com] to determine the most accurate rate.

=== Setup
Add the gem to your Gemfile

    gem 'tax_cloud', '~> 0.1.5'

Configure your environment. For example, create an initializer in Rails in *config/initializers/tax_cloud.rb*

    TaxCloud.configure do |config|
      config.api_login_id = 'your_tax_cloud_api_login_id'
      config.api_key = 'your_tax_cloud_api_key'
      config.usps_username = 'your_usps_username'
    end

=== Using TaxCloud
Define the destination and origin addresses using <tt>TaxCloud::Address</tt>.

    origin = TaxCloud::Address.new(
      :address1 => '162 East Avenue', 
      :address2 => 'Third Floor', 
      :city => 'Norwalk', 
      :state => 'CT', 
      :zip5 => '06851')
    destination = TaxCloud::Address.new(
      :address1 => '3121 West Government Way', 
      :address2 => 'Suite 2B', 
      :city => 'Seattle',
      :state => 'WA', 
      :zip5 => '98199')

Create your Transaction and set up your cart items

    transaction = TaxCloud::Transaction.new(
      :customer_id => '1', 
      :cart_id => '1', 
      :origin => origin, 
      :destination => destination)
    transaction.cart_items << TaxCloud::CartItem.new(
      :index => 0, 
      :item_id => 'SKU-100', 
      :tic => TaxCloud::TaxCodes::GENERAL, 
      :price => 10.00, 
      :quantity => 1)
    lookup = transaction.lookup # this will return a TaxCloud::Responses::Lookup instance
    lookup.tax_amount # total tax amount
    lookup.cart_items.each do |cart_item|
      cart_item.tax_amount # tax for a single item
    end

After you've authorized and captured the transaction via your merchant account, you should do the same with TaxCloud for maintaining accurate tax information.

    transaction.order_id = 100
    transaction.authorized_with_capture # returns "OK" or raises an error

Later, you may need to mark some cart items as returned. TaxCloud will ignore any cart items that you don't include.

    transaction.order_id = 100
    transaction.cart_items << TaxCloud::CartItem.new(
      :index => 0, 
      :item_id => 'SKU-100', 
      :tic => TaxCloud::TaxCodes::GENERAL, 
      :price => 10.00, 
      :quantity => 1)
    transaction.returned # returns "OK" or raises an error

=== Tax Codes
TaxCloud[http://www.taxcloud.com] maintains a list of all Taxability Information Codes or TICs, which can be found at https://taxcloud.net/tic.

You can obtain all tax codes as well as lookup a tax code by ID.

    TaxCloud::TaxCodes.all # a hash of all codes
    tax_code = TaxCloud::TaxCodes[TaxCloud::TaxCodes::DIRECT_MAIL_RELATED]
    tax_code.ticid # 11000 or TaxCloud::TaxCodes::DIRECT_MAIL_RELATED
    tax_code.description # "Direct-mail related"

Tax codes are organized in groups.

    TaxCloud::TaxCode::Groups.all # a hash of all groups
    tax_code_group = TaxCloud::TaxCode::Groups[TaxCloud::TaxCode::Groups::SCHOOL_RELATED_PRODUCTS]
    tax_code_group.group_id # 3 or TaxCloud::TaxCode::Groups::SCHOOL_RELATED_PRODUCTS
    tax_code_group.description # School Related Products
    tax_code_group.tax_codes # a hash of all codes in this group

Tax code constants are defined in <tt>tax_code_constants.rb</tt> and tax code group constants in <<tt>tax_code_group_constants.rb</tt>. These files can be generated by running the following rake tasks.

    TAXCLOUD_API_LOGIN_ID=... TAXCLOUD_API_KEY=... TAXCLOUD_USPS_USERNAME=... tax_cloud:tax_codes
    TAXCLOUD_API_LOGIN_ID=... TAXCLOUD_API_KEY=... TAXCLOUD_USPS_USERNAME=... tax_cloud:tax_code_groups

The tax code constants may require a bit of cleanup, including removing of a few duplicate definitions.

=== Running Tests
* VCR and WebMock are used to replay requests and avoid hitting the API each time. To refresh the mocks, simply delete the <tt>test/cassettes</tt> directory.
* Run tests.
    rake test
* If you need to record new requests against TaxCloud, set your keys first.
    TAXCLOUD_API_LOGIN_ID=... TAXCLOUD_API_KEY=... TAXCLOUD_USPS_USERNAME=... rake test
  The mocks will filter out your configuration details.

=== Bugs, fixes, etc
* Fork.
* Write test(s).
* Fix.
* Commit.
* Submit pull request.
